language: cpp
sudo: true
dist: trusty
compiler: clang
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - llvm-toolchain-trusty-5.0
    packages:
    - build-essential
    - clang-5.0
    - libclang-5.0-dev
    - libclang1-5.0
    - libstdc++6
    - libstdc++-6-dev
    - llvm-5.0
    - libllvm5.0
    - llvm-5.0-dev
    - libgc-dev
    - exuberant-ctags
    - libedit-dev
    - libz-dev
matrix:
  include:
  - os: linux
    env: COMPILER='clang++-5.0' BUILD_TYPE='Release'
  - os: linux
    env: COMPILER='clang++-5.0' BUILD_TYPE='Debug'
  - os: osx
    env: COMPILER='clang++' BUILD_TYPE='Release'
  - os: osx
    env: COMPILER='clang++' BUILD_TYPE='Debug'
install:
- |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    wget -q https://sourceforge.net/projects/boost/files/boost/1.62.0/boost_1_62_0.tar.gz
    tar xf boost_1_62_0.tar.gz
    cd boost_1_62_0/
    ./bootstrap.sh
    sudo ./b2 install --with-filesystem -j"$(nproc)" -d0
    mkdir -p ${TRAVIS_BUILD_DIR}/cmake && cd $_
    CMAKE_FILE="cmake-3.8.2-Linux-x86_64"
    wget --no-check-certificate --quiet http://www.cmake.org/files/v3.8/${CMAKE_FILE}.tar.gz
    tar xf ${CMAKE_FILE}.tar.gz
    test -f ${CMAKE_FILE}/bin/cmake
    export PATH=${TRAVIS_BUILD_DIR}/cmake/${CMAKE_FILE}/bin:${PATH}
  elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
    brew list cmake &> /dev/null || brew install cmake
    brew list ctags &> /dev/null || brew install ctags
    brew list boost &> /dev/null || brew install boost
    brew list llvm &> /dev/null || brew install llvm
    brew list bdw-gc &> /dev/null || brew install bdw-gc
  fi
before_script:
- cd ${TRAVIS_BUILD_DIR}
- cmake . -DFORMAT_BEFORE_BUILD=OFF -DCMAKE_CXX_COMPILER=${COMPILER} -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
script:
- make -j"$(nproc)"
- make test
after_success:
- make package
before_deploy:
- cd dist
deploy:
- provider: s3
  bucket: scopion-latest
  access_key_id: $AWS_ACCESS_KEY_ID
  secret_access_key: $AWS_SECRET_ACCESS_KEY
  skip_cleanup: true
  upload-dir: $TRAVIS_BRANCH
  on:
    condition: "$BUILD_TYPE = Release"
    all_branches: true
- provider: releases
  api_key: $GITHUB_OAUTH_TOKEN
  skip_cleanup: true
  file_glob: true
  file: '*'
  on:
    condition: "$BUILD_TYPE = Release"
    tags: true
